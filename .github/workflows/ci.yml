on:
  push:
    branches:
      - main
      - master
  pull_request:

name: Continuous Integration

jobs:
  macos:
    name: Rust (macOS ${{ matrix.macos }}, Rust ${{ matrix.rust }})
    runs-on: ${{ matrix.macos }}
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
          - stable minus 6 releases
        macos: [macos-latest, macos-13] # macos-latest = Apple Silicon, macos-13 = Intel
    steps:
      - uses: actions/checkout@v4

      - name: Cache cargo registry and target
        uses: Swatinem/rust-cache@v2

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: clippy, rustfmt

      - name: cargo check
        run: cargo check

      - name: cargo test (no run)
        run: cargo test --no-run

      - name: cargo test (all features)
        run: cargo test --all-features

      - name: cargo clippy
        run: cargo clippy --all-features -- -D warnings

      - name: cargo fmt (check)
        run: cargo fmt --all -- --check

  format:
    name: Clang Format (Objective-C)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache clang-format
        uses: actions/cache@v4
        with:
          path: ~/.cache/clang-format
          key: clang-format-${{ runner.os }}

      - uses: DoozyX/clang-format-lint-action@v0.8
        with:
          source: "./objc"
          exclude: "./third_party ./external"
          extensions: "h,m"
          clangFormatVersion: 10
          style: file # read style from .clang-format
